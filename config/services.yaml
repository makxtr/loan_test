# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'


    App\UI\API\:
        resource: '../src/UI/API/'
        tags: [ 'controller.service_arguments' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Infrastructure\Repository\JsonClientRepository:
        arguments:
            $storageFile: '%kernel.project_dir%/var/clients.json'

    App\Infrastructure\Repository\JsonCreditRepository:
        arguments:
            $storageFile: '%kernel.project_dir%/var/credits.json'

    App\Domain\Repository\ClientRepositoryInterface:
        alias: App\Infrastructure\Repository\JsonClientRepository

    App\Domain\Repository\CreditRepositoryInterface:
        alias: App\Infrastructure\Repository\JsonCreditRepository

    App\Domain\Factory\ClientFactory: ~
    App\Application\UseCase\CreateClientUseCase: ~

    _instanceof:
        App\Domain\Rule\RuleInterface:
            tags: ['app.rule']
        App\Domain\Modificator\ModificatorInterface:
            tags: [ 'app.modificator' ]

    App\Application\Rule\RuleChecker:
        arguments:
            $rules: !tagged_iterator app.rule

    App\Application\Rule\Modificator:
        arguments:
            $modificators: !tagged_iterator app.modificator

